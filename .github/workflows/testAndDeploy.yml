name: Salesforce Project
on:
  push:
    branches:
      - "*"
      - "!master"

jobs:
  # First job: Check code formatting using Apex Prettier
  code-formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Salesforce CLI, Prettier and Apex Prettier plugin
        run: |
          npm install @salesforce/cli --global 
          npm install -g prettier 
          npm install -g prettier-plugin-apex

      - name: Run Prettier to check code format
        run: |
          prettier --check "src/**/*.cls"

  # Second job: Run Apex PMD (Source Code Analysis)

  code-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
      - name: Run PMD
        uses: pmd/pmd-github-action@v1
        with:
          rulesets: "ruleset.xml"
          sourcePath: "src/classes"
          analyzeModifiedFilesOnly: false
      - name: Upload PMD results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: pmd-results
          path: pmd-report.txt

  test:
    needs: [code-formatting, code-analysis]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Salesforce CLI
        run: npm install @salesforce/cli --global

      - name: Authenticate to Salesforce using Auth URL
        run: echo "${{ secrets.SF_AUTH_URL }}" > sfdx_auth_url.txt && sfdx auth:sfdxurl:store --sfdxurlfile sfdx_auth_url.txt --setalias MyDevOrg --setdefaultusername

      - name: Run Apex tests (Synchronous)
        # Capture the TestRunId and store it in a file
        run: |
          # List of test classes to run
          TEST_CLASSES="MyCustomClassTest"
          sf apex run test -n $TEST_CLASSES --result-format human --code-coverage --output-dir test-result --wait 10 --json > test-run-result.json
          cat test-run-result.json
          TEST_RUN_ID=$(jq -r '.result.summary.testRunId' test-run-result.json)
          echo "TestRunId: $TEST_RUN_ID"
          echo $TEST_RUN_ID > test-run-id.txt

      - name: Test Coverage Report
        # Use the captured TestRunId to retrieve the coverage report
        run: |
          TEST_RUN_ID=$(cat test-run-id.txt)
          sfdx force:apex:test:report --code-coverage --output-dir test-result --test-run-id $TEST_RUN_ID

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Salesforce CLI
        run: npm install @salesforce/cli --global

      - name: Authenticate to Salesforce using Auth URL
        run: echo "${{ secrets.SF_AUTH_URL }}" > sfdx_auth_url.txt && sfdx auth:sfdxurl:store --sfdxurlfile sfdx_auth_url.txt --setalias MyDevOrg --setdefaultusername

      - name: Deploy to Salesforce
        run: |
          # Deploy source to Salesforce org
          sf project deploy start --target-org MyDevOrg --wait 10 --verbose --test-level NoTestRun
          
      - name: Check Deployment Status
        run: sf project deploy report --target-org MyDevOrg
